/* **DON'T CHANGE THIS HEADER**
 $Author: Colin $
 $Revision: 1.17 $
 $Date: 2007/05/17 00:45:22 $
 $Source: /cvs/repo/Acquire/src/MergeDialogFrame.java,v $
*/

import javax.swing.JOptionPane;

public class MergeDialogFrame extends javax.swing.JFrame
{
    //*PRIVATE FIELDS*//

    private Company myDeadCompany, myLiveCompany;
    private Player myPlayer;
    private int myDeadCompanySize;

    //*CONSTRUCTOR*//

    public MergeDialogFrame(Company liveComp, Company deadComp, int deadCompSize, Player p)
    {
        myPlayer = p;
        myDeadCompany = deadComp;
        myDeadCompanySize = deadCompSize;
        myLiveCompany = liveComp;
        initComponents();
        sharesField.setText(myPlayer.toString() + ", you have " + myPlayer.getShares(myDeadCompany) + " shares of " + myDeadCompany.toString() + ".");
    }

    //*OTHER METHODS*//

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        TradeField = new javax.swing.JTextField();
        KeepField = new javax.swing.JTextField();
        SellField = new javax.swing.JTextField();
        OKButton = new javax.swing.JButton();
        TitleLabel = new javax.swing.JLabel();
        TradeLabel = new javax.swing.JLabel();
        KeepLabel = new javax.swing.JLabel();
        SharesLabel = new javax.swing.JLabel();
        sharesField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("What about the shares?");
        TradeField.setText("0");

        KeepField.setText("0");

        SellField.setText("0");

        OKButton.setText("OK");
        OKButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                OKMouseReleased(evt);
            }
        });

        TitleLabel.setFont(new java.awt.Font("Tahoma", 0, 17));
        TitleLabel.setText("What would you like to do with your shares of this company?");

        TradeLabel.setText("How many shares would you like to trade 2:1?");
        TradeLabel.getAccessibleContext().setAccessibleName("TRADE_SHARES");

        KeepLabel.setText("How many shares would you like to keep?");
        KeepLabel.getAccessibleContext().setAccessibleName("KEEP_SHARES");

        SharesLabel.setText("How many shares would you like to sell?");
        SharesLabel.getAccessibleContext().setAccessibleName("SELL_SHARES");

        sharesField.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(sharesField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(KeepLabel)
                                    .addComponent(TradeLabel)
                                    .addComponent(SharesLabel))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TradeField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SellField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(KeepField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel)
                .addGap(2, 2, 2)
                .addComponent(sharesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TradeLabel)
                    .addComponent(TradeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KeepField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KeepLabel))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SharesLabel)
                    .addComponent(SellField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMouseReleased
        int keptShares = 0, soldShares = 0, tradedShares = 0, totalShares = 0;
        int deadCompShares = myPlayer.getShares(myDeadCompany);
        boolean keeping = KeepField.getText().length() > 0;
        boolean selling = SellField.getText().length() > 0;
        boolean trading = TradeField.getText().length() > 0;

        if(keeping)
        {
            keptShares = Integer.parseInt(KeepField.getText());
        }

        if(selling)
        {
           soldShares = Integer.parseInt(SellField.getText());
        }

        if(trading)
        {
            tradedShares = Integer.parseInt(TradeField.getText());
        }
        
        totalShares =  keptShares + soldShares + tradedShares; 

        if(totalShares > deadCompShares)
        {
            JOptionPane.showMessageDialog(null, "You don't have that many shares.", "Not enough shares", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            if((keptShares < 0) || (soldShares < 0) || (tradedShares < 0))
            {
                JOptionPane.showMessageDialog(null, "Shares cannot be less than 0", "No negatives!", JOptionPane.WARNING_MESSAGE);
            }
            else if(trading && Integer.parseInt(TradeField.getText()) % 2 != 0)
            {
                JOptionPane.showMessageDialog(null, "You need to enter an even number for the amount of traded shares", "Even number required", JOptionPane.WARNING_MESSAGE);
            }
            else if(totalShares < deadCompShares)
            {
                int a = JOptionPane.showConfirmDialog(null, "You still have " + (deadCompShares - totalShares) + " shares left.\nDo you want to just keep them?.", "Keep the extras?", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

                if(a == 0)
                {
                    mergeShares(soldShares, tradedShares);
                }
            }
            else
            {   
                mergeShares(soldShares, tradedShares);
            }
        }
    }//GEN-LAST:event_OKMouseReleased

    private void mergeShares(int soldShares, int tradedShares)
    {
        dispose();
        myDeadCompany.giveMajMinBonus(myDeadCompanySize);
        AcquireFrame.updatePSPs();

        if(soldShares > 0)
        {
            myPlayer.sellShares(myDeadCompany, soldShares, true, myDeadCompanySize);
        }
        if(tradedShares > 0)
        {
            myPlayer.tradeShares(myDeadCompany, myLiveCompany, tradedShares);
        }
    }

    //*PRE-GENERATED FIELDS*//

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField KeepField;
    private javax.swing.JLabel KeepLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JTextField SellField;
    private javax.swing.JLabel SharesLabel;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JTextField TradeField;
    private javax.swing.JLabel TradeLabel;
    private javax.swing.JTextField sharesField;
    // End of variables declaration//GEN-END:variables
}
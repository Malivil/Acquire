/* **DON'T CHANGE THIS HEADER**
 $Author: Mike Lebson $
 $Revision: 1.79 $
 $Date: 2007/05/14 16:52:15 $
 $Source: /cvs/repo/Acquire/src/AcquireFrame.java,v $
*/

import java.awt.event.*;
import java.io.*;
import java.util.NoSuchElementException;
import javax.swing.*;

public class AcquireFrame extends javax.swing.JFrame
{
    //Set to true to display debugging messages
    private boolean DEBUG = false;

    //*PRIVATE FIELDS*//

    private static Company amerComp, towComp, festComp, luxComp, worComp, contComp, impComp;
    private Game myGame = null;
    private JMenuItem newGameItem, aboutItem, exitItem, helpItem, saveItem;
    private HandPanel handPanel;
    private static GridPanel gridP;
    
    //*CONSTRUCTOR*//

    public AcquireFrame()
    {
        initGridPanel();
        initComponents();
        initHandPanel();
        initMenu();
        gridP.setHandPanel(handPanel);
        LogMaster.setTextArea(gameLog);
    }

    //*OTHER METHODS*//

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        towComp = gridP.getCompany("Tower");
        towButton = new CompanyStatusButton(towComp, towComp.getImage());
        luxComp = gridP.getCompany("Luxor");
        luxButton = new CompanyStatusButton(luxComp, luxComp.getImage());
        amerComp = gridP.getCompany("American");
        amerButton = new CompanyStatusButton(amerComp, amerComp.getImage());
        festComp = gridP.getCompany("Festival");
        festButton = new CompanyStatusButton(festComp, festComp.getImage());
        worComp = gridP.getCompany("Worldwide");
        worButton = new CompanyStatusButton(worComp, worComp.getImage());
        contComp = gridP.getCompany("Continental");
        contButton = new CompanyStatusButton(contComp, contComp.getImage());
        impComp = gridP.getCompany("Imperial");
        impButton = new CompanyStatusButton(impComp, impComp.getImage());
        endGameButton = new javax.swing.JButton();
        endTurnButton = new javax.swing.JButton();
        logoPanel = new LogoPanel();
        playerScrollPane = new javax.swing.JScrollPane();
        playersPanel = new javax.swing.JPanel();
        playerStatusPanel1 = new PlayerStatusPanel();
        playerStatusPanel2 = new PlayerStatusPanel();
        playerStatusPanel3 = new PlayerStatusPanel();
        playerStatusPanel4 = new PlayerStatusPanel();
        playerStatusPanel5 = new PlayerStatusPanel();
        playerStatusPanel6 = new PlayerStatusPanel();
        playerStatusPanel7 = new PlayerStatusPanel();
        playerStatusPanel8 = new PlayerStatusPanel();
        gameLogScrollPanel = new javax.swing.JScrollPane();
        gameLog = new javax.swing.JTextArea();
        chatField = new javax.swing.JTextField();
        chatButton = new javax.swing.JButton();
        fileMenu = new javax.swing.JMenuBar();
        menuItem = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Acquire Game in Java");
        setResizable(false);
        towButton.setText("Tower Button");
        towButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                towMouseReleased(evt);
            }
        });

        luxButton.setText("Luxor Button");
        luxButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                luxMouseReleased(evt);
            }
        });

        amerButton.setText("American Button");
        amerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                amerMouseReleased(evt);
            }
        });

        festButton.setText("Festival Button");
        festButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                festMouseReleased(evt);
            }
        });

        worButton.setText("WorldWide Button");
        worButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                worMouseReleased(evt);
            }
        });

        contButton.setText("Continental Button");
        contButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                contMouseReleased(evt);
            }
        });

        impButton.setText("Imperial Button");
        impButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                impMouseReleased(evt);
            }
        });

        endGameButton.setText("End Game!");
        endGameButton.setEnabled(false);
        endGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                endGameMouseReleased(evt);
            }
        });

        endTurnButton.setText("End Turn!");
        endTurnButton.setEnabled(false);
        endTurnButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                endTurnMouseReleased(evt);
            }
        });
        endTurnButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                endTurnKeyPressed(evt);
            }
        });

        logoPanel.setText("logoPanel");
        logoPanel.setBorderPainted(false);
        logoPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                logoPanelMouseReleased(evt);
            }
        });

        playerScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        org.jdesktop.layout.GroupLayout playerStatusPanel1Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel1);
        playerStatusPanel1.setLayout(playerStatusPanel1Layout);
        playerStatusPanel1Layout.setHorizontalGroup(
            playerStatusPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 120, Short.MAX_VALUE)
        );
        playerStatusPanel1Layout.setVerticalGroup(
            playerStatusPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 112, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playerStatusPanel2Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel2);
        playerStatusPanel2.setLayout(playerStatusPanel2Layout);
        playerStatusPanel2Layout.setHorizontalGroup(
            playerStatusPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 120, Short.MAX_VALUE)
        );
        playerStatusPanel2Layout.setVerticalGroup(
            playerStatusPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 112, Short.MAX_VALUE)
        );

        playerStatusPanel3.setMaximumSize(new java.awt.Dimension(110, 110));
        playerStatusPanel3.setMinimumSize(new java.awt.Dimension(110, 110));
        org.jdesktop.layout.GroupLayout playerStatusPanel3Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel3);
        playerStatusPanel3.setLayout(playerStatusPanel3Layout);
        playerStatusPanel3Layout.setHorizontalGroup(
            playerStatusPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );
        playerStatusPanel3Layout.setVerticalGroup(
            playerStatusPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playerStatusPanel4Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel4);
        playerStatusPanel4.setLayout(playerStatusPanel4Layout);
        playerStatusPanel4Layout.setHorizontalGroup(
            playerStatusPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );
        playerStatusPanel4Layout.setVerticalGroup(
            playerStatusPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playerStatusPanel5Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel5);
        playerStatusPanel5.setLayout(playerStatusPanel5Layout);
        playerStatusPanel5Layout.setHorizontalGroup(
            playerStatusPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );
        playerStatusPanel5Layout.setVerticalGroup(
            playerStatusPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playerStatusPanel6Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel6);
        playerStatusPanel6.setLayout(playerStatusPanel6Layout);
        playerStatusPanel6Layout.setHorizontalGroup(
            playerStatusPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );
        playerStatusPanel6Layout.setVerticalGroup(
            playerStatusPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playerStatusPanel7Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel7);
        playerStatusPanel7.setLayout(playerStatusPanel7Layout);
        playerStatusPanel7Layout.setHorizontalGroup(
            playerStatusPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );
        playerStatusPanel7Layout.setVerticalGroup(
            playerStatusPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playerStatusPanel8Layout = new org.jdesktop.layout.GroupLayout(playerStatusPanel8);
        playerStatusPanel8.setLayout(playerStatusPanel8Layout);
        playerStatusPanel8Layout.setHorizontalGroup(
            playerStatusPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );
        playerStatusPanel8Layout.setVerticalGroup(
            playerStatusPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 110, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout playersPanelLayout = new org.jdesktop.layout.GroupLayout(playersPanel);
        playersPanel.setLayout(playersPanelLayout);
        playersPanelLayout.setHorizontalGroup(
            playersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(playersPanelLayout.createSequentialGroup()
                .add(22, 22, 22)
                .add(playersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(playerStatusPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(playerStatusPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(playerStatusPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(playerStatusPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(playerStatusPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(playersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, playerStatusPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, playerStatusPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, playerStatusPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        playersPanelLayout.setVerticalGroup(
            playersPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(playersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(playerStatusPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerStatusPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(579, 579, 579))
        );
        playerScrollPane.setViewportView(playersPanel);

        gameLog.setColumns(20);
        gameLog.setEditable(false);
        gameLog.setLineWrap(true);
        gameLog.setRows(5);
        gameLog.setText("Welcome to Acquire!\n------------------------");
        gameLogScrollPanel.setViewportView(gameLog);

        chatButton.setText("Chat");
        chatButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chatButtonMouseReleased(evt);
            }
        });

        menuItem.setText("File");
        fileMenu.add(menuItem);

        setJMenuBar(fileMenu);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(gameLogScrollPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(towButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(luxButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(amerButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(festButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(worButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(contButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(impButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(logoPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, endGameButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                    .add(endTurnButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, playerScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(chatField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(chatButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(playerScrollPane, 0, 0, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(towButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(luxButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(amerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(festButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(worButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(contButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(impButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 154, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(logoPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(endTurnButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(endGameButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(64, 64, 64)
                .add(gameLogScrollPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chatField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chatButton))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chatButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chatButtonMouseReleased
        LogMaster.log(myGame.getActivePlayer(), chatField.getText());
        chatField.setText("");
    }//GEN-LAST:event_chatButtonMouseReleased

    private void logoPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoPanelMouseReleased
        new AboutFrame().setVisible(true);
    }//GEN-LAST:event_logoPanelMouseReleased

    private void endGameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endGameMouseReleased
        if(endGameButton.isEnabled())
        {
            myGame.endGame();
        }
    }//GEN-LAST:event_endGameMouseReleased

    private void endTurnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endTurnMouseReleased
        if(endTurnButton.isEnabled())
        {
            if((Game.getActivePlayer().getNumBuysLeft() > 0) &&
                    (amerComp.isPlaced()
                    || towComp.isPlaced()
                    || festComp.isPlaced()
                    || luxComp.isPlaced()
                    || worComp.isPlaced()
                    || contComp.isPlaced()
                    || impComp.isPlaced()))
            {
                int a = 1;

                if(Game.getActivePlayer().getMoney() > 0)
                {
                    a = JOptionPane.showConfirmDialog(null, "You can still buy shares, do you really want to end your turn?", "End turn?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                }
                else
                {
                    a = 0;
                }

                if(a == 0)
                {
                    myGame.nextTurn();
                }
            }
            else
            {
                myGame.nextTurn();
            }
        }
    }//GEN-LAST:event_endTurnMouseReleased

    private void impMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_impMouseReleased
        changeOnClick(evt, impButton, impComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_impMouseReleased

    private void contMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contMouseReleased
        changeOnClick(evt, contButton, contComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_contMouseReleased

    private void worMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_worMouseReleased
        changeOnClick(evt, worButton, worComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_worMouseReleased

    private void festMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_festMouseReleased
        changeOnClick(evt, festButton, festComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_festMouseReleased

    private void towMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_towMouseReleased
        changeOnClick(evt, towButton, towComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_towMouseReleased

    private void luxMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_luxMouseReleased
        changeOnClick(evt, luxButton, luxComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_luxMouseReleased

    private void amerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amerMouseReleased
        changeOnClick(evt, amerButton, amerComp);

        if(DEBUG)
        {
            myGame.getActivePlayer().status();
        }
    }//GEN-LAST:event_amerMouseReleased

    private void endTurnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_endTurnKeyPressed
        if(evt.getKeyCode() == evt.VK_SPACE)
        {
            endTurnMouseReleased(null);
        }
    }//GEN-LAST:event_endTurnKeyPressed

    private void changeOnClick(java.awt.event.MouseEvent evt,
                               javax.swing.JButton csb, Company c)
    {
        Player active = myGame.getActivePlayer();
        
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            if(c.isPlaced())
            {
                if(active.getNumBuysLeft() > 0)
                {
                    int temp = active.getNumBuysLeft();
                    int temp2 = active.getMoney();

                    active.buyShare(c, false);
                    if(temp2 != active.getMoney())
                    {
                        active.setNumBuysLeft(--temp);
                    }
                }
                else
                {
                    LogMaster.log("You have already bought your 3 stock for this turn.");
                }
            }
            else
            {
                LogMaster.log("That company is not active.");
            }
        }

        playersPanel.updateUI();
        csb.updateUI();
        endTurnButton.requestFocus();
        updatePSPs();
    }

    public void fillPlayersPanel()
    {
        int ctr = 1;

        for(Player p : Game.getPlayers())
        {
            switch(ctr)
            {
                case 1:
                    playerStatusPanel1.setPlayer(p);
                    break;
                case 2:
                    playerStatusPanel2.setPlayer(p);
                    break;
                case 3:
                    playerStatusPanel3.setPlayer(p);
                    break;
                case 4:
                    playerStatusPanel4.setPlayer(p);
                    break;
                case 5:
                    playerStatusPanel5.setPlayer(p);
                    break;
                case 6:
                    playerStatusPanel6.setPlayer(p);
                    break;
                case 7:
                    playerStatusPanel7.setPlayer(p);
                    break;
                case 8:
                    playerStatusPanel8.setPlayer(p);
                    break;
            }
            ctr++;
        }

        if(ctr <= 5)
        {
            playerScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        }
        else
        {
            playerScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
            //TODO: Make the playersScrollPane only show as much of the playersPanel as is needed.
            playerScrollPane.setViewportView(playersPanel);
        }
    }

    public static void updatePSPs()
    {
        PlayerStatusPanel[] myPSPs = getPSPs();

        for(int ctr = 0; ctr < myPSPs.length; ctr++)
        {
            if(myPSPs[ctr].isEnabled())
            {
                myPSPs[ctr].updateUI();
            }
        }
    }

    private void initGridPanel()
    {
        gridP = new GridPanel();
        this.add(gridP);
        gridP.setLocation(160, 0);
        gridP.setSize(460, 490);
    }

    private void initHandPanel()
    {
        handPanel = new HandPanel(gridP);
        this.add(handPanel);
        handPanel.setLocation(0, 650);
        handPanel.setSize(850, 50);
        handPanel.setBorderPainted(false);
    }

    private void initMenu()
    {
        menuItem.setText("File");
        menuItem.setMnemonic('F');
        FileAction fileAction = new FileAction();
        newGameItem = new JMenuItem("New Game");
        newGameItem.setMnemonic('N');
        newGameItem.addActionListener(fileAction);
        saveItem = new JMenuItem("Save Game Log...");
        saveItem.setMnemonic('S');
        saveItem.addActionListener(fileAction);
        aboutItem = new JMenuItem("About");
        aboutItem.setMnemonic('A');
        aboutItem.addActionListener(fileAction);
        helpItem = new JMenuItem("Help");
        helpItem.setMnemonic('H');
        helpItem.addActionListener(fileAction);
        exitItem = new JMenuItem("Exit");
        exitItem.setMnemonic('x');
        exitItem.addActionListener(fileAction);
        menuItem.add(newGameItem);
        menuItem.add(aboutItem);
        menuItem.add(saveItem);
        menuItem.add(helpItem);
        menuItem.addSeparator();
        menuItem.add(exitItem);
        fileMenu.add(menuItem);

        setJMenuBar(fileMenu);
    }

    //*GET METHODS*//

    public static CompanyStatusButton getCSB(Company c)
    {
        CompanyStatusButton temp;

        if(c.toString().equals(luxComp.toString()))
        {
            temp = (CompanyStatusButton)luxButton;
        }
        else if(c.toString().equals(amerComp.toString()))
        {
            temp = (CompanyStatusButton)amerButton;
        }
        else if(c.toString().equals(worComp.toString()))
        {
            temp = (CompanyStatusButton)worButton;
        }
        else if(c.toString().equals(impComp.toString()))
        {
            temp = (CompanyStatusButton)impButton;
        }
        else if(c.toString().equals(contComp.toString()))
        {
            temp = (CompanyStatusButton)contButton;
        }
        else if(c.toString().equals(festComp.toString()))
        {
            temp = (CompanyStatusButton)festButton;
        }
        else if(c.toString().equals(towComp.toString()))
        {
            temp = (CompanyStatusButton)towButton;
        }
        else
        {
            throw(new NoSuchElementException());
        } 

        return(temp);
    }

    public static PlayerStatusPanel[] getPSPs()
    {
        PlayerStatusPanel[] psp = {playerStatusPanel1, playerStatusPanel2,
                                   playerStatusPanel3, playerStatusPanel4,
                                   playerStatusPanel5, playerStatusPanel6,
                                   playerStatusPanel7, playerStatusPanel8};

        return(psp);
    }

    public static javax.swing.JPanel getPlayersPanel()
    {
        return(playersPanel);
    }

    public static GridPanel getGridPanel()
    {
        return(gridP);
    }
    
    //*PRE-GENERATED FIELDS*//

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton amerButton;
    private javax.swing.JButton chatButton;
    private javax.swing.JTextField chatField;
    private static javax.swing.JButton contButton;
    public static javax.swing.JButton endGameButton;
    public static javax.swing.JButton endTurnButton;
    private static javax.swing.JButton festButton;
    private javax.swing.JMenuBar fileMenu;
    private javax.swing.JTextArea gameLog;
    private javax.swing.JScrollPane gameLogScrollPanel;
    private static javax.swing.JButton impButton;
    private javax.swing.JButton logoPanel;
    private static javax.swing.JButton luxButton;
    private javax.swing.JMenu menuItem;
    private static javax.swing.JScrollPane playerScrollPane;
    private static PlayerStatusPanel playerStatusPanel1;
    private static PlayerStatusPanel playerStatusPanel2;
    private static PlayerStatusPanel playerStatusPanel3;
    private static PlayerStatusPanel playerStatusPanel4;
    private static PlayerStatusPanel playerStatusPanel5;
    private static PlayerStatusPanel playerStatusPanel6;
    private static PlayerStatusPanel playerStatusPanel7;
    private static PlayerStatusPanel playerStatusPanel8;
    private static javax.swing.JPanel playersPanel;
    private static javax.swing.JButton towButton;
    private static javax.swing.JButton worButton;
    // End of variables declaration//GEN-END:variables

    //*MENU HANDLER*//

    //Code courtesy of the Cryptogram program in chapter 24 of Java Methods AB

    private class FileAction implements ActionListener
    {
        public void actionPerformed(ActionEvent e)
        {
            JMenuItem m = (JMenuItem)e.getSource();
            String pathName = System.getProperty("user.dir") + "/";

            if (m == newGameItem)
            {
                new AcquireSetupFrame().setVisible(true);
                dispose();
            }
            else if (m == saveItem)
            {
                JFileChooser fileChooser = new JFileChooser(pathName);
                fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

                int result = fileChooser.showSaveDialog(null);

                if(result == JFileChooser.CANCEL_OPTION)
                {
                    return;
                }

                File file = fileChooser.getSelectedFile();

                if (file != null)
                {
                    pathName = file.getAbsolutePath();
                }

                PrintWriter outputFile;

                try
                {
                    outputFile = new PrintWriter(new FileWriter(pathName, false));
                }
                catch (IOException ex)
                {
                    LogMaster.log("Invalid file name.");
                    return;
                }

                String text = gameLog.getText();
                outputFile.print(text);
                outputFile.close();
            }
            else if (m == aboutItem)
            {
                new AboutFrame().setVisible(true);
            }
            else if(m == helpItem)
            {
                new HelpFrame().setVisible(true);
            }
            else if (m == exitItem)
            {
                dispose();
            }
        }
    }
}
